import { type NextRequest, NextResponse } from "next/server"

export async function GET(request: NextRequest, { params }: { params: { invoiceNumber: string } }) {
  try {
    const { invoiceNumber } = params

    const htmlContent = `
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Invoice #${invoiceNumber}</title>
    <style>
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            margin: 0;
            padding: 40px;
            color: #1f2937;
            line-height: 1.6;
        }
        .header { 
            display: flex; 
            justify-content: space-between; 
            align-items: center;
            margin-bottom: 40px;
            border-bottom: 2px solid #e5e7eb;
            padding-bottom: 20px;
        }
        .logo { 
            font-size: 24px; 
            font-weight: bold; 
            color: #6366f1;
        }
        .invoice-number { 
            font-size: 18px; 
            color: #6b7280;
        }
        .details { 
            display: grid; 
            grid-template-columns: 1fr 1fr; 
            gap: 40px;
            margin-bottom: 40px;
        }
        .section { 
            background: #f9fafb;
            padding: 20px;
            border-radius: 8px;
        }
        .section h3 { 
            margin: 0 0 10px 0; 
            color: #374151;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        .table { 
            width: 100%; 
            border-collapse: collapse;
            margin: 20px 0;
        }
        .table th, .table td { 
            padding: 12px; 
            text-align: left; 
            border-bottom: 1px solid #e5e7eb;
        }
        .table th { 
            background: #f3f4f6;
            font-weight: 600;
            color: #374151;
        }
        .totals { 
            margin-top: 40px;
            text-align: right;
        }
        .total-row { 
            display: flex; 
            justify-content: space-between;
            padding: 8px 0;
        }
        .final-total { 
            font-size: 20px; 
            font-weight: bold;
            border-top: 2px solid #e5e7eb;
            padding-top: 12px;
            margin-top: 12px;
        }
        .footer {
            margin-top: 60px;
            text-align: center;
            color: #6b7280;
            font-size: 12px;
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="logo">InvoiceFlow</div>
        <div class="invoice-number">Invoice #${invoiceNumber}</div>
    </div>
    
    <div class="details">
        <div class="section">
            <h3>Invoice Details</h3>
            <p><strong>Invoice Date:</strong> ${new Date().toLocaleDateString()}</p>
            <p><strong>Due Date:</strong> ${new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toLocaleDateString()}</p>
        </div>
        <div class="section">
            <h3>Bill To</h3>
            <p><strong>ABC Company</strong></p>
            <p>Sample Address Line 1</p>
            <p>Sample City, State 12345</p>
        </div>
    </div>
    
    <table class="table">
        <thead>
            <tr>
                <th>Description</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Laptop Model XYZ</td>
                <td>$1,200.00</td>
                <td>5</td>
                <td>$6,000.00</td>
            </tr>
        </tbody>
    </table>
    
    <div class="totals">
        <div class="total-row">
            <span>Subtotal:</span>
            <span>$6,000.00</span>
        </div>
        <div class="total-row">
            <span>Tax (5%):</span>
            <span>$300.00</span>
        </div>
        <div class="total-row final-total">
            <span>Total Amount:</span>
            <span>$6,300.00</span>
        </div>
    </div>
    
    <div class="footer">
        <p>Generated by InvoiceFlow â€¢ ${new Date().toLocaleString()}</p>
        <p>Thank you for your business!</p>
    </div>
</body>
</html>
    `

    return new NextResponse(htmlContent, {
      headers: {
        "Content-Type": "text/html",
        "Content-Disposition": `inline; filename="invoice-${invoiceNumber}.html"`,
      },
    })
  } catch (error) {
    console.error("[v0] PDF generation error:", error)
    return NextResponse.json({ error: "Failed to generate PDF" }, { status: 500 })
  }
}
